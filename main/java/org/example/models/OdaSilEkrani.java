package org.example.models;

import javax.swing.*;
import java.awt.*;

public class OdaSilEkrani extends JFrame {
    private JTextField txtOdaNumarasi;
    private JButton btnSil, geriButton, yenileButton;
    private JFrame oncekiEkran;

    public OdaSilEkrani(JFrame oncekiEkran) {
        this.oncekiEkran = oncekiEkran;

        // Ekran baÅŸlÄ±ÄŸÄ±nÄ± ve kapanma davranÄ±ÅŸÄ±nÄ± ayarlÄ±yoruz
        setTitle("Oda Sil");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout(10, 10)); // Ana layout, padding ile birlikte

        // Ãœst panel, geri ve yenile butonlarÄ± iÃ§in
        JPanel ustPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        geriButton = new JButton("â¬… Geri");
        yenileButton = new JButton("ðŸ”„ Yenile");

        // Geri butonuna tÄ±klanÄ±rsa Ã¶nceki ekran gÃ¶rÃ¼nÃ¼r, ÅŸu anki ekran kapanÄ±r
        geriButton.addActionListener(e -> {
            oncekiEkran.setVisible(true);
            dispose();
        });

        // Yenile butonuna tÄ±klanÄ±rsa ekran yenilenir
        yenileButton.addActionListener(e -> {
            new OdaSilEkrani(oncekiEkran);
            dispose();
        });

        ustPanel.add(geriButton);
        ustPanel.add(yenileButton);
        add(ustPanel, BorderLayout.NORTH);

        // Ortada oda numarasÄ± giriÅŸi iÃ§in input alanÄ±
        JPanel ortaPanel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);  // Padding ayarÄ±
        gbc.anchor = GridBagConstraints.WEST;

        JLabel lblOdaNumarasi = new JLabel("Oda NumarasÄ±:");
        lblOdaNumarasi.setFont(new Font("Arial", Font.BOLD, 16));  // Font ayarÄ±
        txtOdaNumarasi = new JTextField(20);
        txtOdaNumarasi.setFont(new Font("Arial", Font.PLAIN, 16)); // Font ayarÄ±

        // Ortaya Ã¶ÄŸeleri ekliyoruz
        gbc.gridx = 0;
        gbc.gridy = 0;
        ortaPanel.add(lblOdaNumarasi, gbc);

        gbc.gridx = 1;
        ortaPanel.add(txtOdaNumarasi, gbc);

        add(ortaPanel, BorderLayout.CENTER);

        // Alt panel, uyarÄ± metni ve silme butonu iÃ§in
        JPanel altPanel = new JPanel(new BorderLayout(10, 10));
        JTextArea uyarÄ±TextArea = new JTextArea("LÃ¼tfen geÃ§erli bir oda numarasÄ± girin ve doÄŸru iÅŸlemi gerÃ§ekleÅŸtirin.");
        uyarÄ±TextArea.setEditable(false);  // Metin dÃ¼zenlemesi engelleniyor
        uyarÄ±TextArea.setFont(new Font("Arial", Font.PLAIN, 14));
        uyarÄ±TextArea.setBackground(Color.WHITE);
        uyarÄ±TextArea.setForeground(Color.DARK_GRAY);
        uyarÄ±TextArea.setLineWrap(true);  // SatÄ±r kaydÄ±rma etkin
        uyarÄ±TextArea.setWrapStyleWord(true);  // Kelime bazÄ±nda satÄ±r kaydÄ±rma
        uyarÄ±TextArea.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));  // Kenar boÅŸluÄŸu
        altPanel.add(uyarÄ±TextArea, BorderLayout.NORTH);

        // Silme butonuna tÄ±klanÄ±rsa handleDeleteRoom() fonksiyonu Ã§aÄŸrÄ±lÄ±r
        btnSil = new JButton("Sil");
        btnSil.setFont(new Font("Arial", Font.BOLD, 16));
        btnSil.setPreferredSize(new Dimension(100, 40));
        btnSil.addActionListener(e -> handleDeleteRoom());
        altPanel.add(btnSil, BorderLayout.SOUTH);

        add(altPanel, BorderLayout.SOUTH);

        // Pencere boyutlarÄ±nÄ± ayarlÄ±yoruz
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setMinimumSize(new Dimension(400, 300));
        setVisible(true);
    }

    // Oda silme iÅŸlemi yapÄ±lÄ±rken kontrol ve hata yÃ¶netimi
    private void handleDeleteRoom() {
        try {
            // Oda numarasÄ± boÅŸ olamaz
            if (txtOdaNumarasi.getText().isEmpty()) {
                throw new IllegalArgumentException("Oda numarasÄ± alanÄ± boÅŸ bÄ±rakÄ±lamaz!");
            }

            int odaNumarasi = Integer.parseInt(txtOdaNumarasi.getText());

            // Oda var mÄ± kontrolÃ¼
            if (!OdaDAO.odaMevcutMu(odaNumarasi)) {
                JOptionPane.showMessageDialog(this,
                        "Hata: Oda bulunamadÄ± (Oda NumarasÄ±: " + odaNumarasi + ")",
                        "Hata", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Oda silme iÅŸlemi simÃ¼lasyonu
            OdaDAO.odaSil(odaNumarasi);
            JOptionPane.showMessageDialog(this,
                    "Oda baÅŸarÄ±yla silindi (Oda NumarasÄ±: " + odaNumarasi + ")",
                    "BaÅŸarÄ±lÄ±", JOptionPane.INFORMATION_MESSAGE);

            // Silme iÅŸleminden sonra input alanÄ±nÄ± temizle
            txtOdaNumarasi.setText("");

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this,
                    "LÃ¼tfen geÃ§erli bir oda numarasÄ± girin!",
                    "Hata", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this,
                    "Hata: " + ex.getMessage(),
                    "Hata", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Hata: " + ex.getMessage(),
                    "Hata", JOptionPane.ERROR_MESSAGE);
        }
    }

}
