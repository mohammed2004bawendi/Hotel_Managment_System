package org.example.models;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

public class OdaListeleEkrani extends JFrame {
    private JTextArea txtAreaOdalar;
    private JButton geriButonu, yenileButonu;
    private JFrame oncekiEkran;

    // YapÄ±cÄ± metod: OdaListeleEkrani nesnesini baÅŸlatÄ±r
    public OdaListeleEkrani(JFrame oncekiEkran) {
        this.oncekiEkran = oncekiEkran;

        setTitle("OdalarÄ± Listele");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout(10, 10)); // Ana dÃ¼zen, padding ile

        // Ãœst paneli oluÅŸtur
        ustPaneliOlustur();

        // Orta paneli oluÅŸtur (odalarÄ±n listeleneceÄŸi yer)
        ortaPaneliOlustur();

        // Alt paneli oluÅŸtur (uyarÄ± mesajÄ±)
        altPaneliOlustur();

        // Ã‡erÃ§eve boyutlarÄ± ve gÃ¶rÃ¼nÃ¼rlÃ¼k ayarlarÄ±
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setMinimumSize(new Dimension(400, 300));
        setVisible(true);

        // Ekran aÃ§Ä±ldÄ±ÄŸÄ±nda odalarÄ± otomatik listele
        odalariListele();
    }

    // Ãœst paneldeki butonlarÄ± oluÅŸturur
    private void ustPaneliOlustur() {
        JPanel ustPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        geriButonu = new JButton("â¬… Geri");
        yenileButonu = new JButton("ðŸ”„ Yenile");

        // Geri butonuna tÄ±klama iÅŸlemi
        geriButonu.addActionListener(e -> {
            oncekiEkran.setVisible(true); // Ã–nceki ekranÄ± gÃ¶rÃ¼nÃ¼r yap
            dispose(); // Bu ekranÄ± kapat
        });

        // Yenile butonuna tÄ±klama iÅŸlemi
        yenileButonu.addActionListener(e -> {
            new OdaListeleEkrani(oncekiEkran); // Yeniden OdaListeleEkrani oluÅŸtur
            dispose(); // Bu ekranÄ± kapat
        });

        ustPanel.add(geriButonu);
        ustPanel.add(yenileButonu);
        add(ustPanel, BorderLayout.NORTH);
    }

    // Orta panelde odalarÄ±n listeleneceÄŸi alanÄ± oluÅŸturur
    private void ortaPaneliOlustur() {
        txtAreaOdalar = new JTextArea();
        txtAreaOdalar.setEditable(false); // KullanÄ±cÄ± dÃ¼zenlemesini engelle
        txtAreaOdalar.setFont(new Font("Arial", Font.PLAIN, 14));
        JScrollPane scrollPane = new JScrollPane(txtAreaOdalar);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); // Dikey kaydÄ±rma Ã§ubuÄŸunu her zaman gÃ¶ster
        add(scrollPane, BorderLayout.CENTER);
    }

    // Alt paneldeki uyarÄ± mesajlarÄ±nÄ± oluÅŸturur
    private void altPaneliOlustur() {
        JPanel altPanel = new JPanel(new BorderLayout(10, 10));
        JTextArea uyariTextArea = new JTextArea("Bu ekranda odalar otomatik olarak listelenir.\n" +
                "- 'Yenile' butonuyla listeyi gÃ¼ncelleyebilirsiniz.\n" +
                "- EÄŸer kayÄ±tlÄ± oda bulunmazsa, ilgili mesaj gÃ¶rÃ¼ntÃ¼lenir.");
        uyariTextArea.setEditable(false); // KullanÄ±cÄ± dÃ¼zenlemesini engelle
        uyariTextArea.setFont(new Font("Arial", Font.PLAIN, 14));
        uyariTextArea.setBackground(Color.WHITE);
        uyariTextArea.setForeground(Color.DARK_GRAY);
        uyariTextArea.setLineWrap(true); // SatÄ±r sonu geldiÄŸinde kelimeyi sarmaya baÅŸla
        uyariTextArea.setWrapStyleWord(true); // Kelime tam olarak sarÄ±lacak ÅŸekilde
        uyariTextArea.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Ä°Ã§ boÅŸluklarÄ± ayarla
        altPanel.add(uyariTextArea, BorderLayout.CENTER);

        add(altPanel, BorderLayout.SOUTH);
    }

    // OdalarÄ± listeleyen metod
    private void odalariListele() {
        txtAreaOdalar.setText(""); // Ã–nceki veriyi temizle
        ArrayList<OdaDTO> odalar = OdaDAO.tumOdalarListesiniGetir(); // Oda bilgilerini al

        if (odalar.isEmpty()) {
            txtAreaOdalar.setText("KayÄ±tlÄ± oda bulunamadÄ±."); // EÄŸer oda yoksa mesaj ver
        } else {
            for (OdaDTO oda : odalar) {
                txtAreaOdalar.append(
                        "Oda No: " + oda.getOdaNumarasi() +
                                ", Kapasite: " + oda.getKapasite() +
                                ", Fiyat: " + oda.getFiyat() +
                                ", Durum: " + oda.getDurum() +
                                ", Manzara: " + oda.getManzara() + "\n"
                );
            }
        }
    }
}
