import javax.swing.*;
import java.awt.event.ActionEvent;
import java.sql.*;

public class RezervasyonGorEkrani extends JFrame {
    private JFrame oncekiEkran;

    public RezervasyonGorEkrani(JFrame oncekiEkran) {
        this.oncekiEkran = oncekiEkran;

        setTitle("RezervasyonlarÄ± GÃ¶r");
        setSize(400, 400);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(null);

        // MenÃ¼ Ã§ubuÄŸu oluÅŸtur
        JMenuBar menuCubugu = new JMenuBar();

        // Geri Butonu
        JButton geriButonu = new JButton("â¬… Geri");
        geriButonu.addActionListener((ActionEvent e) -> {
            oncekiEkran.setVisible(true); // Ã–nceki ekranÄ± gÃ¶ster
            dispose(); // Mevcut ekranÄ± kapat
        });

        // Yenile Butonu
        JButton yenileButonu = new JButton("ğŸ”„ Yenile");
        yenileButonu.addActionListener((ActionEvent e) -> {
            new RezervasyonGorEkrani(oncekiEkran); // Bu ekranÄ± yeniden baÅŸlat
            dispose(); // Mevcut ekranÄ± kapat
        });

        // MenÃ¼ Ã§ubuÄŸuna butonlarÄ± ekle
        menuCubugu.add(geriButonu);
        menuCubugu.add(yenileButonu);

        // MenÃ¼ Ã§ubuÄŸunu pencereye ekle
        setJMenuBar(menuCubugu);

        // BileÅŸenler
        JLabel tcKimlikLabel = new JLabel("TC Kimlik NumarasÄ±:");
        JTextField tcKimlikAlan = new JTextField();
        JButton gorButonu = new JButton("Rezervasyonu GÃ¶r");

        JTextArea textArea = new JTextArea();
        textArea.setBounds(20, 80, 350, 250);
        textArea.setEditable(false);

        tcKimlikLabel.setBounds(20, 20, 150, 30);
        tcKimlikAlan.setBounds(170, 20, 150, 30);
        gorButonu.setBounds(100, 50, 200, 30);

        add(tcKimlikLabel);
        add(tcKimlikAlan);
        add(gorButonu);
        add(textArea);

        // Rezervasyonu GÃ¶r butonuna tÄ±klandÄ±ÄŸÄ±nda
        gorButonu.addActionListener(e -> {
            String tcKimlik = tcKimlikAlan.getText();  // KullanÄ±cÄ±dan TC Kimlik NumarasÄ±nÄ± alÄ±yoruz

            // VeritabanÄ±na baÄŸlanarak bu TC Kimlik NumarasÄ±'na ait rezervasyonlarÄ± Ã§ekiyoruz
            try (Connection baglanti = DriverManager.getConnection("jdbc:mysql://localhost:3306/otel_db", "root", "password")) {
                String sorgu = "SELECT * FROM rezervasyon WHERE tcKimlik = ?";
                PreparedStatement sorguHazirla = baglanti.prepareStatement(sorgu);
                sorguHazirla.setString(1, tcKimlik);  // TC Kimlik NumarasÄ± ile sorgulama

                ResultSet sonuc = sorguHazirla.executeQuery();

                // EÄŸer veritabanÄ±ndan rezervasyon varsa, ekrana yazdÄ±rÄ±yoruz
                if (sonuc.next()) {
                    textArea.setText(""); // Ã–nceki verileri temizle
                    do {
                        textArea.append("Rezervasyon No: " + sonuc.getDouble("rezervasyonNo") + "\n");
                        textArea.append("Oda No: " + sonuc.getInt("odaBilgisi") + ", Tarih: " + sonuc.getString("kalinacakTarihler") + "\n\n");
                    } while (sonuc.next());
                } else {
                    textArea.setText("Bu TC Kimlik NumarasÄ± ile yapÄ±lmÄ±ÅŸ bir rezervasyon bulunamadÄ±.");
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "VeritabanÄ± hatasÄ±: " + ex.getMessage());
            }
        });

        setVisible(true); // EkranÄ± gÃ¶rÃ¼nÃ¼r hale getir
    }
}
